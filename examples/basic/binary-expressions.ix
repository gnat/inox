manifest {}

# Binary expressions are always surrounded by parentheses

print "--- arithmetic and comparison operations on integers ---"
print "1 + 2 :" (1 + 2) # 3
print "1 < 2 :" (1 < 2) # true
print "1 / 2 :" (1 / 2) # 0
print ""

print "--- arithmetic and comparison operations on floating points ---"
print "1.0 + 2.0 :" (1.0 + 2.0) 
print "1.0 < 2.0 :" (1.0 < 2.0)
print "1.0 / 2.0 :" (1.0 / 2.0) 
print ""

print "--- logical operations ---"
print "true or false :" (true or false)
print "true and false :" (true and false)
print ""

print "--- is operator ---"
print "true is false :" (true is false)
print "1 is 1 :" (1 is 1)
print "{} is {} :" ({} is {})
print ""

#  The '==' operator checks for deep equality
print "--- equality operations ---" 
print "1 == 1 :" (1 == 1)
print "1.0 == 1 :" (1 == 1.0)
print "{} == {} :" ({} == {})
print "{a: 1} == {a: 1} :" ({a: 1} == {a: 1})
print "[] == [] :" ([] == [])
print ""

print "--- other operations ---"
print "a in [\"a\"] :" ("a" in ["a"])
print "\"ab\" substrof \"abc\" :" ("ab" substrof "abc")
print "\"a\" keyof {a: 1} :" ("a" keyof {a: 1})
print "nil ?? 1 :" (nil ?? 1)
print "1 .. 2 :" (1 .. 2)

pattern patt = str("a"+)
print "%patt = \"a\"+;  \"a\" match %patt :" ("a" match %patt)
print "%patt = \"a\"+;  \"a\" match %patt :" ("a" match patt)




