# this script generates docs/tutorials

const (
    DATA_FILE = ./internal/learn/tutorials.yaml
    OUTPUT_DIR = ./docs/tutorials/
)

manifest {
    permissions: {
        read: IWD_PREFIX
        write: IWD_PREFIX
        delete: IWD_PREFIX
    }
}


import ./base.ix

# Retrieve tutorials.

content = read!(DATA_FILE)
assert (content match [[]tutorial-series])

tutorial_series = content[0]

delete!(OUTPUT_DIR)

# Generate tutorials/README.md.
var readme str = "# Tutorial Series \n\n"

for series in tutorial_series {
    readme = concat readme `- [${series.name}](./${series.id}/)\n`
}

readme = concat readme `
It is recommended to follow through these tutorial series directly in VSCode by creating a file with a \`.tut.ix\` extension.
You will get syntax colorization. Make sure to create the file **inside a project**.

[Install Inox & VSCode Extension](https://github.com/inoxlang/inox#installation)

![tutorial-demo](https://github.com/inoxlang/inox-vscode/raw/master/assets/docs/tutorial-demo.gif)

`

create!(OUTPUT_DIR.join(./README.md), readme)

# Generate a directory for each series.
for series in tutorial_series {
    series_dir = OUTPUT_DIR.join(./{series.id}/)
    fs.mkdir!(series_dir)

    # Generate a file for each tutorial in the series.
    for i, tutorial in series.tutorials {
        number = tostr((i + 1))
        tutorial_file = series_dir.join(./{number}-{tutorial.id}.md)

        program = strmanip.trim_space(tutorial.program)

        create!(tutorial_file, (concat "# " tutorial.name " \n\n```\n"  program "\n```"))
    }
}
